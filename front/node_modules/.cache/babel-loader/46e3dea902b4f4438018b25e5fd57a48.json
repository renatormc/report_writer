{"ast":null,"code":"// import axios from './axios'\nexport const getFormLayout = async model_name => {\n  console.log(model_name);\n  return new Promise(resolve => {\n    resolve([[{\n      widget_type: \"text_widget\",\n      field_name: \"nome\",\n      widget_props: {},\n      label: \"Nome\",\n      col: 4\n    }, {\n      widget_type: \"text_widget\",\n      field_name: \"endereco\",\n      widget_props: {},\n      label: \"Endereço\",\n      col: 0\n    }, {\n      widget_type: \"text_widget\",\n      field_name: \"profissao\",\n      widget_props: {},\n      label: \"Profissão\",\n      col: 5\n    }], [{\n      widget_type: \"array_widget\",\n      field_name: \"outro_valor\",\n      widget_props: {\n        widgets: [[{\n          widget_type: \"text_widget\",\n          field_name: \"cargo\",\n          widget_props: {},\n          label: \"Cargo\",\n          col: 0\n        }, {\n          widget_type: \"text_widget\",\n          field_name: \"lotacao\",\n          widget_props: {},\n          label: \"Lotação\",\n          col: 0\n        }]],\n        defaultItemData: {\n          \"cargo\": \"Defaul cargo\"\n        }\n      },\n      label: \"Outro valor\",\n      col: 0\n    }]]);\n  });\n};\nexport const getFormDefaultData = async model_name => {\n  console.log(model_name);\n  return new Promise(resolve => {\n    resolve({\n      'nome': \"João Silva\",\n      'endereco': \"Rua Pedro de Lara\"\n    });\n  });\n};\nexport const sendFormData = async (model_name, data) => {\n  console.log(model_name);\n  console.log(data);\n  return new Promise(resolve => {\n    resolve({\n      'nome': \"Erro no campo nome\"\n    });\n  });\n};","map":{"version":3,"names":["getFormLayout","model_name","console","log","Promise","resolve","widget_type","field_name","widget_props","label","col","widgets","defaultItemData","getFormDefaultData","sendFormData","data"],"sources":["/media/renato/linux_data/src/report_writer/front/src/services/api.ts"],"sourcesContent":["import { WidgetMatrixType, ErrorsType } from './../types/custom_types';\n// import axios from './axios'\n\n\nexport const getFormLayout = async (model_name: string): Promise<WidgetMatrixType> => {\n    console.log(model_name);\n    return new Promise<WidgetMatrixType>((resolve) => {\n        resolve([\n            [\n                { widget_type: \"text_widget\", field_name: \"nome\", widget_props: {}, label: \"Nome\", col: 4 },\n                { widget_type: \"text_widget\", field_name: \"endereco\", widget_props: {}, label: \"Endereço\", col: 0 },\n                { widget_type: \"text_widget\", field_name: \"profissao\", widget_props: {}, label: \"Profissão\", col: 5 },\n            ],\n            [\n                { widget_type: \"array_widget\", field_name: \"outro_valor\", widget_props: {\n                    widgets: [[\n                        { widget_type: \"text_widget\", field_name: \"cargo\", widget_props: {}, label: \"Cargo\", col: 0 },\n                        { widget_type: \"text_widget\", field_name: \"lotacao\", widget_props: {}, label: \"Lotação\", col: 0 },\n                    ]],\n                    defaultItemData: {\n                        \"cargo\": \"Defaul cargo\"\n                    }\n                }, label: \"Outro valor\", col: 0 }\n            ]\n        ]);\n    });\n}\n\n\nexport const getFormDefaultData = async (model_name: string): Promise<{ [key: string]: any }> => {\n    console.log(model_name);\n    return new Promise<{ [key: string]: any }>((resolve) => {\n        resolve({\n            'nome': \"João Silva\",\n            'endereco': \"Rua Pedro de Lara\"\n        });\n    });\n}\n\nexport const sendFormData = async (model_name: string, data: any): Promise<ErrorsType> => {\n    console.log(model_name);\n    console.log(data);\n    return new Promise<{ [key: string]: any }>((resolve) => {\n        resolve({\n            'nome': \"Erro no campo nome\"\n        });\n    });\n}\n"],"mappings":"AACA;AAGA,OAAO,MAAMA,aAAa,GAAG,MAAOC,UAAP,IAAyD;EAClFC,OAAO,CAACC,GAAR,CAAYF,UAAZ;EACA,OAAO,IAAIG,OAAJ,CAA+BC,OAAD,IAAa;IAC9CA,OAAO,CAAC,CACJ,CACI;MAAEC,WAAW,EAAE,aAAf;MAA8BC,UAAU,EAAE,MAA1C;MAAkDC,YAAY,EAAE,EAAhE;MAAoEC,KAAK,EAAE,MAA3E;MAAmFC,GAAG,EAAE;IAAxF,CADJ,EAEI;MAAEJ,WAAW,EAAE,aAAf;MAA8BC,UAAU,EAAE,UAA1C;MAAsDC,YAAY,EAAE,EAApE;MAAwEC,KAAK,EAAE,UAA/E;MAA2FC,GAAG,EAAE;IAAhG,CAFJ,EAGI;MAAEJ,WAAW,EAAE,aAAf;MAA8BC,UAAU,EAAE,WAA1C;MAAuDC,YAAY,EAAE,EAArE;MAAyEC,KAAK,EAAE,WAAhF;MAA6FC,GAAG,EAAE;IAAlG,CAHJ,CADI,EAMJ,CACI;MAAEJ,WAAW,EAAE,cAAf;MAA+BC,UAAU,EAAE,aAA3C;MAA0DC,YAAY,EAAE;QACpEG,OAAO,EAAE,CAAC,CACN;UAAEL,WAAW,EAAE,aAAf;UAA8BC,UAAU,EAAE,OAA1C;UAAmDC,YAAY,EAAE,EAAjE;UAAqEC,KAAK,EAAE,OAA5E;UAAqFC,GAAG,EAAE;QAA1F,CADM,EAEN;UAAEJ,WAAW,EAAE,aAAf;UAA8BC,UAAU,EAAE,SAA1C;UAAqDC,YAAY,EAAE,EAAnE;UAAuEC,KAAK,EAAE,SAA9E;UAAyFC,GAAG,EAAE;QAA9F,CAFM,CAAD,CAD2D;QAKpEE,eAAe,EAAE;UACb,SAAS;QADI;MALmD,CAAxE;MAQGH,KAAK,EAAE,aARV;MAQyBC,GAAG,EAAE;IAR9B,CADJ,CANI,CAAD,CAAP;EAkBH,CAnBM,CAAP;AAoBH,CAtBM;AAyBP,OAAO,MAAMG,kBAAkB,GAAG,MAAOZ,UAAP,IAA+D;EAC7FC,OAAO,CAACC,GAAR,CAAYF,UAAZ;EACA,OAAO,IAAIG,OAAJ,CAAqCC,OAAD,IAAa;IACpDA,OAAO,CAAC;MACJ,QAAQ,YADJ;MAEJ,YAAY;IAFR,CAAD,CAAP;EAIH,CALM,CAAP;AAMH,CARM;AAUP,OAAO,MAAMS,YAAY,GAAG,OAAOb,UAAP,EAA2Bc,IAA3B,KAA8D;EACtFb,OAAO,CAACC,GAAR,CAAYF,UAAZ;EACAC,OAAO,CAACC,GAAR,CAAYY,IAAZ;EACA,OAAO,IAAIX,OAAJ,CAAqCC,OAAD,IAAa;IACpDA,OAAO,CAAC;MACJ,QAAQ;IADJ,CAAD,CAAP;EAGH,CAJM,CAAP;AAKH,CARM"},"metadata":{},"sourceType":"module"}