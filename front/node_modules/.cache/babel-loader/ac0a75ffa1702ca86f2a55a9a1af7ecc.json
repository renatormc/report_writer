{"ast":null,"code":"import axios from './axios';\nexport const getFormLayout = async model_name => {\n  return axios.get(\"test\"); // console.log(model_name);\n  // return new Promise<WidgetMatrixType>((resolve) => {\n  //     resolve([\n  //         [\n  //             { widget_type: \"text_widget\", field_name: \"nome\", widget_props: {}, label: \"Nome\", col: 4 },\n  //             { widget_type: \"text_widget\", field_name: \"endereco\", widget_props: {}, label: \"Endereço\", col: 0 },\n  //             { widget_type: \"text_widget\", field_name: \"profissao\", widget_props: {}, label: \"Profissão\", col: 5 },\n  //         ],\n  //         [\n  //             { widget_type: \"array_widget\", field_name: \"outro_valor\", widget_props: {\n  //                 widgets: [[\n  //                     { widget_type: \"text_widget\", field_name: \"cargo\", widget_props: {}, label: \"Cargo\", col: 0 },\n  //                     { widget_type: \"text_widget\", field_name: \"lotacao\", widget_props: {}, label: \"Lotação\", col: 0 },\n  //                 ]],\n  //                 defaultItemData: {\n  //                     \"cargo\": \"Defaul cargo\"\n  //                 }\n  //             }, label: \"Outro valor\", col: 0 }\n  //         ]\n  //     ]);\n  // });\n};\nexport const getFormDefaultData = async model_name => {\n  console.log(model_name);\n  return new Promise(resolve => {\n    resolve({\n      'nome': \"João Silva\",\n      'endereco': \"Rua Pedro de Lara\"\n    });\n  });\n};\nexport const sendFormData = async (model_name, data) => {\n  console.log(model_name);\n  console.log(data);\n  return new Promise(resolve => {\n    resolve({\n      'nome': \"Erro no campo nome\"\n    });\n  });\n};","map":{"version":3,"names":["axios","getFormLayout","model_name","get","getFormDefaultData","console","log","Promise","resolve","sendFormData","data"],"sources":["/media/renato/linux_data/src/report_writer/front/src/services/api.ts"],"sourcesContent":["import { WidgetMatrixType, ErrorsType } from './../types/custom_types';\nimport axios from './axios'\n\n\nexport const getFormLayout = async (model_name: string): Promise<WidgetMatrixType> => {\n    return axios.get(\"test\");\n\n    // console.log(model_name);\n    // return new Promise<WidgetMatrixType>((resolve) => {\n    //     resolve([\n    //         [\n    //             { widget_type: \"text_widget\", field_name: \"nome\", widget_props: {}, label: \"Nome\", col: 4 },\n    //             { widget_type: \"text_widget\", field_name: \"endereco\", widget_props: {}, label: \"Endereço\", col: 0 },\n    //             { widget_type: \"text_widget\", field_name: \"profissao\", widget_props: {}, label: \"Profissão\", col: 5 },\n    //         ],\n    //         [\n    //             { widget_type: \"array_widget\", field_name: \"outro_valor\", widget_props: {\n    //                 widgets: [[\n    //                     { widget_type: \"text_widget\", field_name: \"cargo\", widget_props: {}, label: \"Cargo\", col: 0 },\n    //                     { widget_type: \"text_widget\", field_name: \"lotacao\", widget_props: {}, label: \"Lotação\", col: 0 },\n    //                 ]],\n    //                 defaultItemData: {\n    //                     \"cargo\": \"Defaul cargo\"\n    //                 }\n    //             }, label: \"Outro valor\", col: 0 }\n    //         ]\n    //     ]);\n    // });\n}\n\n\nexport const getFormDefaultData = async (model_name: string): Promise<{ [key: string]: any }> => {\n    console.log(model_name);\n    return new Promise<{ [key: string]: any }>((resolve) => {\n        resolve({\n            'nome': \"João Silva\",\n            'endereco': \"Rua Pedro de Lara\"\n        });\n    });\n}\n\nexport const sendFormData = async (model_name: string, data: any): Promise<ErrorsType> => {\n    console.log(model_name);\n    console.log(data);\n    return new Promise<{ [key: string]: any }>((resolve) => {\n        resolve({\n            'nome': \"Erro no campo nome\"\n        });\n    });\n}\n"],"mappings":"AACA,OAAOA,KAAP,MAAkB,SAAlB;AAGA,OAAO,MAAMC,aAAa,GAAG,MAAOC,UAAP,IAAyD;EAClF,OAAOF,KAAK,CAACG,GAAN,CAAU,MAAV,CAAP,CADkF,CAGlF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACH,CAxBM;AA2BP,OAAO,MAAMC,kBAAkB,GAAG,MAAOF,UAAP,IAA+D;EAC7FG,OAAO,CAACC,GAAR,CAAYJ,UAAZ;EACA,OAAO,IAAIK,OAAJ,CAAqCC,OAAD,IAAa;IACpDA,OAAO,CAAC;MACJ,QAAQ,YADJ;MAEJ,YAAY;IAFR,CAAD,CAAP;EAIH,CALM,CAAP;AAMH,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,OAAOP,UAAP,EAA2BQ,IAA3B,KAA8D;EACtFL,OAAO,CAACC,GAAR,CAAYJ,UAAZ;EACAG,OAAO,CAACC,GAAR,CAAYI,IAAZ;EACA,OAAO,IAAIH,OAAJ,CAAqCC,OAAD,IAAa;IACpDA,OAAO,CAAC;MACJ,QAAQ;IADJ,CAAD,CAAP;EAGH,CAJM,CAAP;AAKH,CARM"},"metadata":{},"sourceType":"module"}