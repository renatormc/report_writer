{"ast":null,"code":"var _jsxFileName = \"/media/renato/linux_data/src/report_writer/front/src/widgets/switch_widget.tsx\";\nimport React from 'react';\nimport TextWidget from './text_widget';\nimport ArrayWidget from './array_widget';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SwitchWidget(props) {\n  switch (props.widget_type) {\n    case \"text_widget\":\n      return /*#__PURE__*/_jsxDEV(TextWidget, {\n        updateFormValue: props.updateFormValue,\n        widget_props: props.widget_props,\n        data: props.data,\n        field_name: props.field_name,\n        errors: props.errors,\n        label: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n\n    case \"array_widget\":\n      return /*#__PURE__*/_jsxDEV(ArrayWidget, {\n        widget_props: props.widget_props,\n        data: props.data,\n        field_name: props.field_name,\n        errors: props.errors,\n        updateFormValue: props.updateFormValue,\n        label: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Widget of type \\\"\", props.widget_type, \"\\\" doesn't exist.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n  }\n}\n\n_c = SwitchWidget;\nexport default SwitchWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwitchWidget\");","map":{"version":3,"names":["React","TextWidget","ArrayWidget","SwitchWidget","props","widget_type","updateFormValue","widget_props","data","field_name","errors","label"],"sources":["/media/renato/linux_data/src/report_writer/front/src/widgets/switch_widget.tsx"],"sourcesContent":["import React from 'react';\nimport TextWidget from './text_widget';\nimport ArrayWidget from './array_widget';\n\ntype Props = {\n  widget_props: any,\n  data: any,\n  errors: any,\n  field_name: string,\n  widget_type: string,\n  label: string,\n  updateFormValue: (field: string, value: any) => void\n}\n\nfunction SwitchWidget(props: Props) {\n  switch (props.widget_type) {\n    case \"text_widget\":\n      return <TextWidget\n        updateFormValue={props.updateFormValue}\n        widget_props={props.widget_props}\n        data={props.data}\n        field_name={props.field_name}\n        errors={props.errors}\n        label={props.label} />\n    case \"array_widget\":\n      return <ArrayWidget\n        widget_props={props.widget_props}\n        data={props.data}\n        field_name={props.field_name}\n        errors={props.errors}\n        updateFormValue={props.updateFormValue} \n        label={props.label}/>\n    default:\n      return <p>Widget of type \"{props.widget_type}\" doesn't exist.</p>;\n  }\n\n}\n\nexport default SwitchWidget;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAYA,SAASC,YAAT,CAAsBC,KAAtB,EAAoC;EAClC,QAAQA,KAAK,CAACC,WAAd;IACE,KAAK,aAAL;MACE,oBAAO,QAAC,UAAD;QACL,eAAe,EAAED,KAAK,CAACE,eADlB;QAEL,YAAY,EAAEF,KAAK,CAACG,YAFf;QAGL,IAAI,EAAEH,KAAK,CAACI,IAHP;QAIL,UAAU,EAAEJ,KAAK,CAACK,UAJb;QAKL,MAAM,EAAEL,KAAK,CAACM,MALT;QAML,KAAK,EAAEN,KAAK,CAACO;MANR;QAAA;QAAA;QAAA;MAAA,QAAP;;IAOF,KAAK,cAAL;MACE,oBAAO,QAAC,WAAD;QACL,YAAY,EAAEP,KAAK,CAACG,YADf;QAEL,IAAI,EAAEH,KAAK,CAACI,IAFP;QAGL,UAAU,EAAEJ,KAAK,CAACK,UAHb;QAIL,MAAM,EAAEL,KAAK,CAACM,MAJT;QAKL,eAAe,EAAEN,KAAK,CAACE,eALlB;QAML,KAAK,EAAEF,KAAK,CAACO;MANR;QAAA;QAAA;QAAA;MAAA,QAAP;;IAOF;MACE,oBAAO;QAAA,gCAAoBP,KAAK,CAACC,WAA1B;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;EAlBJ;AAqBD;;KAtBQF,Y;AAwBT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}